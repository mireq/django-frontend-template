$breakpoints: (
	small: 0,
	medium: 640px,
	large: 1024px,
	xlarge: 1200px,
	xxlarge: 1440px,
) !default;

$_breakpoints_next: ();
$_prev: null;

@each $key, $value in $breakpoints {
	@if ($_prev != null) {
		$_breakpoints_next: map-merge($_breakpoints_next, ($_prev: $value));
	}
	$_prev: $key;
}

@function strip_px($val) {
	@return $val / ($val * 0 + 1);
}

/* Breakpoint class
 *
 * Usage
 *
 * @include breakpoint(medium) {
 *   // medium up rules
 * }
 *
 * @include breakpoint(medium only) {
 *   // medium only rules (not up, not down)
 * }
 *
 * @include breakpoint(medium down) {
 *   // medium down rules
 * }
 */
@mixin breakpoint($val: small) {
	// Size or keyword
	$bp: nth($val, 1);
	// Value for max-width media queries
	$bpMax: 0;
	// Direction of media query (up, down, or only)
	$dir: if(length($val) > 1, nth($val, 2), up);
	// Eventual output
	$str: 'only screen';

	// Try to pull a named breakpoint out of the $breakpoints map
	@if map-has-key($breakpoints, $bp) {
		@if $dir == 'only' {
			$next-bp: map-get($_breakpoints_next, $bp);
			@if $next-bp == null {
				$bpMax: null;
			}
			@else {
				$next-bp: strip_px($next-bp) / 16 * 1em;
				$bpMax: $next-bp - (1/16);
			}
		}
		$bp: map-get($breakpoints, $bp);
	}

	// Change bp to em
	$bp: strip_px($bp) / 16 * 1em;

	// Skip media query creation if the input is "0 up" or "0 down"
	@if $bp > 0 or $dir == 'only' {
		// And lo, a media query was born
		@if $dir == 'only' {
			$str: $str + ' and (min-width: #{$bp})';
			@if $bpMax != null {
				$str: $str + ' and (max-width: #{$bpMax})';
			}
		}
		@else if $dir == 'down' {
			$max: $bp - (1/16);
			$str: $str + ' and (max-width: #{$max})';
		}
		@else {
			$str: $str + ' and (min-width: #{$bp})';
		}
	}

	@debug $bp;
	// Output
	@if $bp == 0em and $dir != 'only' {
		@content;
	}
	@else {
		@media #{$str} {
			@content;
		}
	}
}
